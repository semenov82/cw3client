#!/usr/bin/python3
# coding=utf-8
import logging
import random
import _thread
import sys
import re
import json
import os
import traceback
import config
from random import SystemRandom
from time import time, sleep
from datetime import datetime
from getopt import getopt
from getpass import getpass
from collections import deque
from telethon import TelegramClient, events, connection
from telethon.errors import SessionPasswordNeededError
from telethon.tl.functions.messages import GetBotCallbackAnswerRequest
logging.basicConfig(format=u'%(filename)s[LINE:%(lineno)-3s]# %(levelname)-5s [%(asctime)s] %(message)s',
                    level=logging.DEBUG)
logging.getLogger('telethon').setLevel(level=logging.WARNING)
cryptogen = SystemRandom()
logger = logging.getLogger(__name__)
main_chat = config.main_chat
game_bot = 265204902 # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –∏–∑–º–µ–Ω–∏—Ç—Å—è –±–æ—Ç, –ø–æ–º–µ–Ω—è—Ç—å
game_user = 'ChatWarsBot'
helper_game = 615010125
helper_user = 'CWCastleBot'
admin_id = config.admin_id
admin_user = config.admin_user
orders_user = config.orders_user
api_hash = config.api_hash
api_id = config.api_id
ordersman = config.ordersman 
orders = ['üê¢','üçÅ','üåπ','‚òòÔ∏è','ü¶á','üñ§','üçÜ']
hero_des = '/start'
action_list = deque([])
get_info_diff = 360
phone = ''
arenarunning = True
bone = False
opts, args = getopt(sys.argv[1:], 'p:', ['phone='])
for opt, arg in opts:
    if opt in ('-p', '--phone'):
        phone = arg
try:
    nchek = os.listdir('./sessions/')
except:
    os.mkdir('./sessions/')
    nchek = os.listdir('./sessions/')
nchek1 = str(phone) + '.session'
fss = "./sessions/" + nchek1
proxy_ip = 'ru.tgproxy.today'
proxy_port = 8080
secret = 'ddfb175d6d7f820cdc73ab11edbdcdbd74'
DC1_ip = '149.154.167.40'
DC_port = 443
client = TelegramClient(fss, api_id, api_hash, update_workers=3, spawn_read_thread=False, proxy=(proxy_ip, proxy_port, secret),  connection=connection.tcpmtproxy.ConnectionTcpMTProxy)
client.session.set_dc(1, DC1_ip, DC_port)
client.start()
if not client.is_user_authorized():
    if nchek1 in nchek: # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç, —Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ª–æ–≥–∏–Ω –∫–æ–¥
        pass 
    else:
        client.send_code_request(phone)
    try:
        client.sign_in(phone, input('–ö–æ–¥ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞: '))
    except SessionPasswordNeededError:
        pw = getpass('–î–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞. '
                     '–í–≤–µ–¥–∏ –∫–æ–¥: ')
        self_user = client.sign_in(password=pw)
client.start()
# –ë–æ—Ä–µ–º—Å—è —Å –æ—à–∏–±–∫–æ–π entity 
logging.debug('–ó–∞–≥—Ä—É–∂–∞–µ–º —é–∑–µ—Ä–æ–≤...')
client.get_entity(game_user)
client.get_entity(helper_user)
client.get_entity(admin_user)
while len(orders_user) > 0 and '0' not in orders_user:
    client.get_entity(orders_user.pop())
logging.debug('–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
try:
    tweens = os.listdir('./configs/')
except:
    os.mkdir('./configs/')
    tweens = os.listdir('./configs/')
tween = str(client.get_me().id) + '.json'
twos = './configs/' + tween
if tween in tweens:
    logging.debug('–ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞...')
    with open(twos, 'r') as file:
        data = json.loads(file.read())
    for i in data:
        lvlup = i['lvlup']
        les = i['les']
        caravan = i['caravan']
        arena = i['arena']
        rob = i['rob']
        order = i['order']
        help = i['help']
        bog = i['bog']
        gold = i['gold']
        mountval = i['mountval']
        autodef = i['autodef']
        dice = i['dice']
        lvlprof1 = i['lvlprof1']
        lvlprof2 = i['lvlprof2']
        enable_bot = i['enable_bot']
    if lvlprof1 == 'master':
        setprof1title = '‚öí–ú–∞—Å—Ç–µ—Äüì¶'
    elif lvlprof1 == 'esquire':
        setprof1title = '‚öîÔ∏è–≠—Å–∫–≤–∞–π—Äüõ°'
    else:
        setprof1title = 'Error'
    if lvlprof2 == 'harvester':
        setprof2title = 'üì¶–î–æ–±—ã—Ç—á–∏–∫'
    elif lvlprof2 == 'smith':
        setprof2title = '‚öí–ö—É–∑–Ω–µ—Ü'
    elif lvlprof2 == 'alchemist':
        setprof2title = '‚öóÔ∏è–ê–ª—Ö–∏–º–∏–∫'
    elif lvlprof2 == 'ranger':
        setprof2title = 'üèπ–†–µ–π–Ω–¥–∂–µ—Ä'
    elif lvlprof2 == 'knight':
        setprof2title = '‚öîÔ∏è–†—ã—Ü–∞—Ä—å'
    elif lvlprof2 == 'keeper':
        setprof2title = 'üõ°–•—Ä–∞–Ω–∏—Ç–µ–ª—å' 
    else:
        setprof2title = 'Error'
    logging.debug('–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
else:
    logging.info('–ù–æ–≤—ã–π —Ç–≤–∏–Ω–∫! —Å–æ–∑–¥–∞—é —Ö—Ä–∞–Ω–∏–ª–∏—â–µ...')
    open(twos, 'tw', encoding='utf-8') # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    enable_bot = True
    lvlup = True
    les = True
    caravan = False
    order = True
    rob = True
    arena = True
    help = False 
    bog = False
    mountval = False
    autodef = True
    dice = False
    lvlprof1 = 'master'
    setprof1title = '‚öí–ú–∞—Å—Ç–µ—Äüì¶'
    lvlprof2 = 'harvester'
    setprof2title = 'üì¶–î–æ–±—ã—Ç—á–∏–∫'
    basejson = [{
    'enable_bot': enable_bot,
    'phone': phone,
    'username': client.get_me().username,
    'castle': 0,
    'gold': 0,
    'deff': 0,
    'atk': 0,
    'lvl': 0,
    'lvlup': lvlup,
    'les': les,
    'caravan': caravan,
    'rob': rob,
    'arena': arena,
    'order': order,
    'help': help,
    'bog': bog,
    'mountval': mountval,
    'autodef': autodef,
    'dice': dice,
    'lvlprof1': lvlprof1,
    'lvlprof2': lvlprof2,
}]
    with open (twos, 'w') as file:
        json.dump(basejson, file, indent=2, ensure_ascii=False)
    # –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫, –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—â–µ–Ω–∏–µ —Å —Ö–µ–ª–ø–µ—Ä–æ–º
    client.send_message(helper_game, '/start')

def worker():
    global get_info_diff
    global lt_info
    global enable_bot
    global hero_des
    lt_info = 0
    while True:
        try:
            if time() - lt_info > get_info_diff and enable_bot:
                lt_info = time()
                get_info_diff = cryptogen.randint(420, 900)
                client.send_message(game_bot, hero_des)
                continue # –ü–∞—Ä–∞–º–µ—Ç—Ä get_info_diff –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç
            if len(action_list): # –∑–∞–¥–∞—ë—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
                if enable_bot:
                    move = action_list.popleft()
                    logging.debug('–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º ' + str(move))
                    client.send_message(game_bot, move)
                else:
                    logging.debug('–ü—Ä–æ—ë–±—ã–≤–∞–µ–º—Å—è –≤ –æ—Ç–∫–ª—é—á–∫–µ —Ö—ã—Ö—ã—Ö—ã')
            sleep_time = cryptogen.randint(5, 8)
            sleep(sleep_time)
        except Exception as e:
            logging.exception(e)
@client.on(events.NewMessage)
def all_messages(event):
    global enable_bot
    global help
    global bog
    global autodef
    global mountval
    global les
    global caravan
    global arena
    global lvlup
    global rob
    global order
    global gold
    global arenarunning
    global littleinfo
    global castle
    global name
    global dice
    global level
    global bone
    global dmg
    global deff
    global status
    global endurance
    global endurancemax
    global last_msg
    global hero_msg
    global atk_des
    global def_des
    global hero_des
    global setprof1
    global setprof2
    if event.message.from_id == game_bot and not enable_bot and rob and re.search('\/go', event.raw_text):
        sleep(cryptogen.randint(5, 9))
        client.send_message(game_bot, '/go') # –ß–µ—Ä–µ–∑ 5-9 —Å–µ–∫—É–Ω–¥ –µ–±–∞—à–∏–º –∫–∞—Ä–∞–≤–∞–Ω –¥–∞–∂–µ –µ—Å–ª–∏ –±–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω
        logging.info('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º /go')
    elif event.message.from_id == game_bot and enable_bot:
        logging.info('–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–≤')
        # logging.info(event) # –µ—Å–ª–∏ –±–æ–∏—à—å—Å—è, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ - —Ä–∞—Å–∫–æ–º–µ–Ω—Ç—å –∏ —á–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª –ø–æ—Å–º–æ—Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏
        # logging.info(event.message.reply_markup.rows[0].buttons[0].text)
        last_msg = event.raw_text
        if '–ë–∏—Ç–≤–∞ —Å–µ–º–∏ –∑–∞–º–∫–æ–≤' in event.raw_text:
            hero_msg = event.raw_text
            hero_des = event.message.reply_markup.rows[1].buttons[0].text
            atk_des = event.message.reply_markup.rows[0].buttons[0].text
            def_des = event.message.reply_markup.rows[0].buttons[1].text
            if '–ñ–º–∏ /level_up' in event.raw_text:
                if lvlup:
                    logging.info('–õ–≤–ª–∞–ø, –∫–∞—á–∞–µ–º')
                    action_list.append('/level_up')
                else:
                    logging.info('–õ–≤–ª–∞–ø, –Ω–æ –≤—ã–∫–ª—é—á–µ–Ω((')
            castle = re.search('(.{1})(.{0,50}) .+ (–¢–æ—Ä—Ç—É–≥–∏|–û–ø–ª–æ—Ç–∞|–°–∫–∞–ª—ã|–§–µ—Ä–º—ã|–ù–æ—á–∏|–ê–º–±–µ—Ä–∞|–†–∞—Å—Å–≤–µ—Ç–∞)', event.raw_text).group(1)
            castlename = re.search('(.{1})(.{0,50}) .+ (–¢–æ—Ä—Ç—É–≥–∏|–û–ø–ª–æ—Ç–∞|–°–∫–∞–ª—ã|–§–µ—Ä–º—ã|–ù–æ—á–∏|–ê–º–±–µ—Ä–∞|–†–∞—Å—Å–≤–µ—Ç–∞)', event.raw_text).group(3)
            names = re.search('(.{1})(.{0,50}) .+ (–¢–æ—Ä—Ç—É–≥–∏|–û–ø–ª–æ—Ç–∞|–°–∫–∞–ª—ã|–§–µ—Ä–º—ã|–ù–æ—á–∏|–ê–º–±–µ—Ä–∞|–†–∞—Å—Å–≤–µ—Ç–∞)', event.raw_text).group(2)
            name = castle+names
            endurance = int(re.search('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: (\d+)', event.raw_text).group(1))
            endurancemax = int(re.search('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: (\d+)/(\d+)', event.raw_text).group(2))
            gold = int(re.search('üí∞(-?[0-9]+)', event.raw_text).group(1))
            dmg = int(re.search('‚öî–ê—Ç–∞–∫–∞: (\d+) üõ°–ó–∞—â–∏—Ç–∞: (\d+)', event.raw_text).group(1))
            deff = int(re.search('‚öî–ê—Ç–∞–∫–∞: (\d+) üõ°–ó–∞—â–∏—Ç–∞: (\d+)', event.raw_text).group(2))
            level = int(re.search('üèÖ–£—Ä–æ–≤–µ–Ω—å: (\d+)', event.raw_text).group(1))
            status = re.search('–°–æ—Å—Ç–æ—è–Ω–∏–µ:\n(.*)', event.raw_text).group(1)
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                i['castle'] = castlename
                i['gold'] = gold
                i['lvl'] = level
                i['atk'] = dmg
                i['deff'] = deff
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
            if re.search('–ë–∏—Ç–≤–∞ —Å–µ–º–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑ (\d+) (–º–∏–Ω\.!|–º–∏–Ω—É—Ç—ã!|–º–∏–Ω—É—Ç—É!)', event.raw_text):
                TimeToBattle = int(re.search('–ë–∏—Ç–≤–∞ —Å–µ–º–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑ (\d+) (–º–∏–Ω\.!|–º–∏–Ω—É—Ç—ã!|–º–∏–Ω—É—Ç—É!)', event.raw_text).group(1))
                if TimeToBattle <= 25 and '‚öî–ê—Ç–∞–∫–∞' not in status: # –∑–∞ 25 –º–∏–Ω—É—Ç –¥–æ –±–∏—Ç–≤—ã –ø–µ—Ä–µ—Å—Ç–∞—ë–º —á—ë—Ç–∞ –¥–µ–ª–∞—Ç—å
                    status = '–î–æ –±–∏—Ç–≤—ã –æ—Å—Ç–∞–ª–æ—Å—å {} –º–∏–Ω.'.format(TimeToBattle)
                    if autodef:
                        button = event.message.reply_markup.rows[0].buttons[1].text
                        action_list.append(button)
                    else:
                        logging.info('–ê–≤—Ç–æ–¥–µ—Ñ –≤—ã–∫–ª—é—á–µ–Ω, –∂–¥—ë–º –±–∏—Ç–≤—ã')
                else:
                    logging.info('{} –º–∏–Ω. –¥–æ –±–∏—Ç–≤—ã'.format(TimeToBattle))
            if status == 'üõå–û—Ç–¥—ã—Ö' or 'üõ°–ó–∞—â–∏—Ç–∞' in status:
                buttonquest = event.message.reply_markup.rows[0].buttons[2].text
                buttoncastle = event.message.reply_markup.rows[1].buttons[1].text
                if les or mountval or bog or caravan:
                    if endurance > 1 and not caravan: # –í—Å–µ–≥–¥–∞ –±—É–¥–µ–º –æ—Å—Ç–∞–≤–ª—è—Ç—å 1 —Å—Ç–∞–º–∏–Ω—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
                        logging.info('–ò–¥—ë–º –∑–∞ –∫–≤–µ—Å—Ç–æ–º')
                        action_list.append(buttonquest)
                    elif endurance > 2 and caravan:
                        logging.info('–ò–¥—ë–º –∑–∞ –∫–≤–µ—Å—Ç–æ–º')
                        action_list.append(buttonquest)
                if arena or dice:
                    if arena and endurance <= 1 and gold >= 5 and arenarunning and level >= 5:
                        logging.info('–ò–¥—ë–º –Ω–∞ –∞—Ä–µ–Ω—É')
                        action_list.append(buttonquest)
                    elif dice and endurance <= 1 and gold >=10 and not bone:
                        logging.info('–ò–¥—ë–º –≤ –∫–æ—Å—Ç–∏')
                        bone = True
                        action_list.append(buttoncastle)
                else:
                    status = 'üí§–î–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ'
                    logging.info('–î–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ')
            else:
                logging.info('–°—Ç–∞—Ç—É—Å: ' + status + ' –∂–¥—ë–º')
        elif re.search('(–í –ª–µ—Å—É –≤—Å—è–∫–æ–µ –º–æ–∂–µ—Ç —Å–ª—É—á–∏—Ç—å—Å—è|–ü—Ä–æ–∫–ª—è—Ç—ã–π –ª–µ—Å, –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –∑–ª–æ–≤–µ—â–∏–º–∏ —Å—É—â–µ—Å—Ç–≤–∞–º–∏.)', event.raw_text):
            if re.search('üìØ–ê—Ä–µ–Ω–∞ üîí', event.raw_text):
                arenarunning = False
                logging.info('–ê—Ä–µ–Ω–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
            else:
                arenarunning = True
            if les and endurance > 1:
                button = event.message.reply_markup.rows[0].buttons[0].text
                action_list.append(button)
                endurance -= 1
                status = 'üå≤–í –ª–µ—Å—É'
                logging.info('–ü–æ—à–ª–∏ –≤ –ª–µ—Å')
            elif caravan and endurance > 2 and level >= 5:
                button = event.message.reply_markup.rows[0].buttons[1].text
                action_list.append(button)
                endurance -= 1
                status = 'üó°–ì—Ä–∞–±–∏–º'
                logging.info('–ü–æ—à–ª–∏ –≤ –∫–æ—Ä–æ–≤–∞–Ω—ã')
            elif arena and endurance <= 1 and gold >= 5 and arenarunning and level >= 5:
                if level < 20:
                    button = event.message.reply_markup.rows[1].buttons[0].text
                elif level >=20:
                    button = event.message.reply_markup.rows[2].buttons[0].text
                action_list.append(button)
                status = 'üìØ–ò–¥—ë–º –Ω–∞ –∞—Ä–µ–Ω—É'
                logging.info('–ü–æ—à–ª–∏ –Ω–∞ –∞—Ä–µ–Ω—É')
            elif mountval and endurance > 1 and level >= 20:
                button = event.message.reply_markup.rows[1].buttons[1].text
                action_list.append(button)
                endurance -= 1
                status = '‚õ∞Ô∏è–í –¥–æ–ª–∏–Ω–µ'
                logging.info('–ü–æ—à–ª–∏ –≤ –¥–æ–ª–∏–Ω—É')
            elif bog and endurance > 1 and level >= 20:
                button = event.message.reply_markup.rows[1].buttons[0].text
                action_list.append(button)
                endurance -= 1
                status = 'üçÑ–í –±–æ–ª–æ—Ç–µ'
                logging.info('–ü–æ—à–ª–∏ –≤ –±–æ–ª–æ—Ç–æ')
            else:
                status = 'üí§–î–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ'
                logging.info('–î–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ')
        elif re.search('–¢–∞–≤–µ—Ä–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –≤–µ—á–µ—Ä–∞–º', event.raw_text) and bone and dice:
            if re.search('(üåô–ù–æ—á—å|üåô–í–µ—á–µ—Ä)', event.raw_text):
                logging.info('–ò–¥—ë–º –∏–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏')
                button = event.message.reply_markup.rows[0].buttons[1].text
                action_list.append(button)
            else:
                bone = False
                logging.info('–¢–∞–≤–µ—Ä–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∞, –Ω–∏–∫–∞–∫–∏—Ö –∫–æ—Å—Ç–µ–π')
        elif '–∞–∑–∞—Ä—Ç–Ω—ã—Ö –≤–æ–∏–Ω–æ–≤:' in event.raw_text and bone and dice:
            bone = False
            button = event.message.reply_markup.rows[0].buttons[1].text
            action_list.append(button)
            status = 'üé≤–ò–≥—Ä–∞–µ–º –≤ –∫–æ—Å—Ç–∏'
            logging.info('üé≤–ò–≥—Ä–∞–µ–º –≤ –∫–æ—Å—Ç–∏')
        elif 'üé≤–í—ã –±—Ä–æ—Å–∏–ª–∏ –∫–æ—Å—Ç–∏ –Ω–∞ —Å—Ç–æ–ª:' in event.raw_text:
            if re.search('{}: .* \((\d+)\)\n.*\((\d+)\)'.format(name), event.raw_text):
                me = int(re.search('{}: .* \((\d+)\)\n.*\((\d+)\)'.format(name), event.raw_text).group(1))
                notme = int(re.search('{}: .* \((\d+)\)\n.*\((\d+)\)'.format(name), event.raw_text).group(2))
            elif re.search('.*\((\d+)\)\n{}: .* \((\d+)\)'.format(name), event.raw_text):
                me = int(re.search('.*\((\d+)\)\n{}: .* \((\d+)\)'.format(name), event.raw_text).group(2))
                notme = int(re.search('.*\((\d+)\)\n{}: .* \((\d+)\)'.format(name), event.raw_text).group(1))
            if me > notme:
                gold += 20
                logging.info('–ü–æ–±–µ–¥–∏–ª–∏ –≤ –∫–æ—Å—Ç—è—Ö!, –∑–æ–ª–æ—Ç–æ: {}'.format(gold))
                if dice and gold >= 10:
                    logging.info('–ò–¥—ë–º –µ—â—ë —Ä–∞–∑ –≤ –∫–æ—Å—Ç–∏')
                    action_list.append('üé≤–ò–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏')
                else:
                    logging.info('–ù—É –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏ –µ—â—ë —Å—Ö–æ–¥–∏—Ç—å..')
            elif me < notme:
                gold -= 20
                logging.info('–ü—Ä–æ–∏–≥—Ä–∞–ª–∏ –≤ –∫–æ—Å—Ç—è—Ö, —ç—Ö –±–ª—è')
                if dice and gold >= 10:
                    logging.info('–ò–¥—ë–º –µ—â—ë —Ä–∞–∑ –≤ –∫–æ—Å—Ç–∏')
                    action_list.append('üé≤–ò–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏')
                else:
                    if gold < 10:
                        logging.info('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç {} –∑–æ–ª–æ—Ç–∞ –¥–ª—è –∫–æ—Å—Ç–µ–π'.format(10-gold))
                    else:
                        logging.info('–ù—É –º–æ–∂–Ω–æ –±—ã–ª–æ –±—ã –∏ –µ—â—ë —Å—Ö–æ–¥–∏—Ç—å..')
            elif me == notme:
                logging.info('–ù–∏—á—å—è??')
                action_list.append(hero_des)
        elif re.search('\/go', event.raw_text) and rob:
            sleep(cryptogen.randint(5, 160))
            client.send_message(game_bot, '/go') # –ß–µ—Ä–µ–∑ 5-160 —Å–µ–∫—É–Ω–¥ –µ–±–∞—à–∏–º –∫–∞—Ä–∞–≤–∞–Ω
            logging.info('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º /go')
        elif re.search('\/pledge', event.raw_text):
            action_list.append('/pledge')
            logging.info('–ü—Ä–∏–Ω–∏–º–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ—Ä–µ–≤–Ω–∏')
        elif re.search('\/engage', event.raw_text):
            action_list.append('/engage')
            logging.info('–∞—Ç–∞–∫—É–µ–º –º–æ–±–∞!')
        elif re.search('\/tributes', event.raw_text):
            action_list.append('/tributes')
            logging.info('–ü–æ–∂–∏–Ω–∞–µ–º –ø–ª–æ–¥—ã –¥–µ—Ä–µ–≤–Ω–∏')
        elif re.search('(\/skill_.*|\/learn_.*)', event.raw_text) and lvlup:
            skills = random.choice(re.findall(r'(\/skill_.*|\/learn_.*)', event.raw_text))
            action_list.append(skills) # –ö–∞—á–∞–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å–∫–∏–ª–ª
            logging.info('–ö–∞—á–∞–µ–º ' + skills)
        elif re.search('Code \d+ to authorize (.*)\.', event.raw_text):
            if re.search('Code \d+ to authorize (.*)\.', event.raw_text).group(1) == helper_user:
                client.forward_messages(helper_user, event.message.id, event.message.from_id)
                logging.info('–ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ —Ö–µ–ª–ø–µ—Ä–∞')
        elif '–£ —Ç–µ–±—è –Ω–µ—Ç –¥–µ–Ω–µ–≥, —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –≤—Ö–æ–¥.' in event.raw_text:
            logging.info('–î–µ–Ω–µ–≥ –Ω–∞ –∞—Ä–µ–Ω—É –Ω–µ—Ç')
            gold = 0
        elif '–ê—Ä–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∞ –Ω–∞ –Ω–æ—á—å.' in event.raw_text:
            logging.info('–ê—Ä–µ–Ω–∞ –∑–∞–∫—Ä—ã—Ç–∞ –Ω–∞ –Ω–æ—á—å, –æ—Ç–∫–ª—é—á–∞—é')
            arenarunning = False
        elif '–ü–æ–¥—Ö–æ–¥—è—â–∏–π —Å–æ–ø–µ—Ä–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.' in event.raw_text:
            logging.info('–ù–µ –Ω–∞—à–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, –ø–µ—á–∞–ª—å–∫–∞')
            gold += 5
        elif '–¶–µ–Ω–∞ –∑–∞ –≤—Ö–æ–¥: 5üí∞' in event.raw_text:
            arena_last = re.search('–ü–æ–µ–¥–∏–Ω–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è: (\d+)\/(\d+)', event.raw_text).group(1)
            arena_all = re.search('–ü–æ–µ–¥–∏–Ω–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è: (\d+)\/(\d+)', event.raw_text).group(2)
            if arena_last < arena_all and arenarunning:
                logging.info('–ü–æ—à–ª–∏ –Ω–∞ –∞—Ä–µ–Ω—É')
                button = event.message.reply_markup.rows[0].buttons[1].text
                action_list.append(button)
                gold -= 5
            else:
                arenarunning = False
                logging.info('–ê—Ä–µ–Ω–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤—Å—ë')
                button = event.message.reply_markup.rows[1].buttons[1].text
                action_list.append(button)
        elif '–†–µ–π—Ç–∏–Ω–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã' in event.raw_text:
            logging.info('–ê—Ä–µ–Ω–∞ –í–°–Å')
            action_list.append(hero_des)
        elif '–ñ–∞–∂–¥–∞ –∫—Ä–æ–≤–∏ –æ–¥–æ–ª–µ–ª–∞ —Ç–µ–±—è, —Ç—ã –ø–æ—à–µ–ª –Ω–∞ –ê—Ä–µ–Ω—É.' in event.raw_text:
            status = 'üìØ–ù–∞ –∞—Ä–µ–Ω–µ'
            logging.info('–ü–æ–∏—Å–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞')
            
        elif re.search('–ü–æ–ª—É—á–µ–Ω–æ: \d+ –æ–ø—ã—Ç–∞ and \d+ –∑–æ–ª–æ—Ç—ã—Ö –º–æ–Ω–µ—Ç', event.raw_text) or \
            '–ü—Ä–æ–≥—É–ª–∏–≤–∞—è—Å—å –Ω–µ–ø–æ–¥–∞–ª–µ–∫—É' in event.raw_text or '–ù–æ—á–Ω–∞—è –ø—Ä–æ—Ö–ª–∞–¥–∞ –æ–±–≤–æ–ª–∞–∫–∏–≤–∞–ª–∞ —Ç–µ–±—è' in event.raw_text or \
            'Walking through the swamp' in event.raw_text or '–ù–∞ —É–ª–∏—Ü–µ —Å—Ç–æ—è–ª–∞ –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø–æ–≥–æ–¥–∞' in event.raw_text or \
            '–ü—Ä–∏—Ç–æ–º–∏–≤—à–∏—Å—å –æ—Ç –¥–æ–ª–≥–æ–π –ø—Ä–æ–≥—É–ª–∫–∏' in event.raw_text or 'Mrrrrgl mrrrgl mrrrrrrgl mrrrgl.' in event.raw_text:
            logging.info('–∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫–≤–µ—Å—Ç')
            action_list.append(hero_des)
            
        elif 'You are not a little boy anymore' in event.raw_text and lvlup:
            if setprof1 == 'master':
                button = event.message.reply_markup.rows[0].buttons[0].text
                action_list.append(button)
            elif setprof1 == 'esquire':
                button = event.message.reply_markup.rows[1].buttons[0].text
                action_list.append(button)
            if main_chat != 0:
                client.send_message(main_chat, '–ü—Ä–æ–∫–∞—á–∞–ª–∏ –ø—Ä–æ—Ñ—É {}'.format(button))
            logging.info('–ü—Ä–æ–∫–∞—á–∞–ª–∏ –ø—Ä–æ—Ñ—É {}'.format(button))
        elif "You served your castle bravely and honourably" in event.raw_text \
            or "you're done with your apprenticeship, but now it‚Äôs time to decide your path" in event.raw_text:
            if setprof2 == 'alchemist':
                button = event.message.reply_markup.rows[0].buttons[0].text
                action_list.append(button)
            elif setprof2 == 'harvester':
                button = event.message.reply_markup.rows[0].buttons[1].text
                action_list.append(button)
            elif setprof2 == 'smith':
                button = event.message.reply_markup.rows[1].buttons[0].text
                action_list.append(button)
            elif setprof2 == 'knight':
                button = event.message.reply_markup.rows[1].buttons[0].text
                action_list.append(button)
            elif setprof2 == 'ranger':
                button = event.message.reply_markup.rows[0].buttons[1].text
                action_list.append(button)
            elif setprof2 == 'keeper':
                button = event.message.reply_markup.rows[0].buttons[0].text
                action_list.append(button)
            logging.info('–ü—Ä–æ–∫–∞—á–∞–ª–∏ –ø—Ä–æ—Ñ—É {}'.format(button))
            if main_chat != 0:
                client.send_message(main_chat, '–ü—Ä–æ–∫–∞—á–∞–ª–∏ –ø—Ä–æ—Ñ—É {}'.format(button))
    elif event.message.from_id == helper_game and help:
        if 'üá∫üá∏ Select your language' in event.raw_text:
            sleep(1)
            client.send_message(helper_game, 'üá∑üá∫ –†—É—Å—Å–∫–∏–π')
        elif '–ì–æ—Ç–æ–≤–æ! –†—É—Å—Å–∫–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.' in event.raw_text:
            sleep(1)
            client.send_message(helper_game, 'üë§–Ø')
        elif re.search('(\/grantProfile)', event.raw_text):
            sleep(1)
            client.send_message(helper_game, '/grantProfile')
        elif re.search('(\/auth)', event.raw_text):
            sleep(1)
            client.send_message(helper_game, '/auth')
        elif '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã' in event.raw_text:
            sleep(1)
            client.send_message(helper_game, '/update')
        elif '–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–æ—Å—Ç—É–ø /grantHelp' in event.raw_text:
            sleep(1)
            client.send_message(helper_game, '/grantTrade')
        elif '–°–ø–∞—Å–∏–±–æ! –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.' in event.raw_text:
            sleep(2)
            client.send_message(helper_game, '/settings')
            sleep(2)
            client.send_message(helper_game, '/sett_showintop')
            sleep(2)
            client.send_message(helper_game, '/sett_msg_profile')
            sleep(2)
            client.send_message(helper_game, '/sett_msg_report')
            sleep(2)
            client.send_message(helper_game, '/sett_msg_ex_notification')
            sleep(2)
            client.send_message(helper_game, '/sett_msg_stock')
            sleep(2)
            client.send_message(helper_game, '/grantTrade')
        elif '‚öñÔ∏èExchange slot' in event.raw_text:
            item = re.search('([a-zA-Z]{0,}) (\d+) x (\d+)üí∞ = (\d+)üí∞', event.raw_text).group(1)
            min = int(re.search('([a-zA-Z]{0,}) (\d+) x (\d+)üí∞ = (\d+)üí∞', event.raw_text).group(3))
            if min <= gold:
                client(GetBotCallbackAnswerRequest(event.message.to_id,event.message.id,data=event.message.reply_markup.rows[1].buttons[0].data))
                logging.info('–ü–æ–∫—É–ø–∞–µ–º {}'.format(item))
            else:
                logging.info('–î–ª—è –ø–æ–∫—É–ø–∫–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {} –≥–æ–ª–¥–∞'.format(min-gold))
        elif '–í—ã —Å–º–æ–≥–ª–∏ –∫—É–ø–∏—Ç—å' in event.raw_text:
            buys = re.search('–í—ã —Å–º–æ–≥–ª–∏ –∫—É–ø–∏—Ç—å: (.*)', event.raw_text).group(1)
            logging.info('–ü–æ–∫—É–ø–∞–µ–º '+buys)
            client.send_message(main_chat, '–ö—É–ø–∏–ª–∏ –Ω–∞ –±–∏—Ä–∂–µ: {}'.format(buys))
        elif '–ú–¥–∞, –Ω–µ –≥—É—Å—Ç–æ –∑–æ–ª–æ—Ç–∏—à–∫–∞...' in event.raw_text or '–ú–∞–ª–æ–≤–∞—Ç–æ –∑–æ–ª–æ—Ç–∏—à–∫–∞' in event.raw_text:
            logging.info('–ú–∞–ª–æ –¥–µ–Ω–µ–≥')
            gold = 0
    elif event.message.from_id in ordersman and not admin_id:
        logging.info('–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –æ—Ä–¥–µ—Ä–∞')
        if event.raw_text in orders and order:
            corder = re.search('(üê¢|üçÅ|üåπ|‚òòÔ∏è|ü¶á|üñ§|üçÜ)', event.raw_text).group(1)
            if corder == castle:
                action_list.append(def_des)
            else:
                action_list.append(atk_des)
                action_list.append(corder)
            logging.info('–ü–∏–Ω '+corder)
    elif event.message.from_id == admin_id:
        global setprof1title
        global setprof2title
        logging.info('–ü–æ–ª—É—á–∏–ª–∏ –∞–¥–º–∏–Ω—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        # logging.info(event)
        if event.raw_text in orders and order:
            corder = re.search('(üê¢|üçÅ|üåπ|‚òòÔ∏è|ü¶á|üñ§|üçÜ)', event.raw_text).group(1)
            if corder == castle:
                action_list.append(def_des)
            else:
                action_list.append(atk_des)
                action_list.append(corder)
            logging.info('–ü–∏–Ω '+corder)
        elif '#custom' in event.raw_text:
            comm = re.search('#custom (.*)', event.raw_text).group(1)
            client.send_message(event.message.to_id, f"–ö–æ–º–∞–Ω–¥–∞ {comm} –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è")
            action_list.append(comm)
        elif re.search('(\/g_def|\/g_atk) (.*)', event.raw_text):
            out = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è!\n{}'.format(event.raw_text)
            client.send_message(event.message.to_id, out)
            client.send_message(game_bot, event.raw_text)
        elif re.search('#ex_create ([a-zA-Z]{1,20}) (\d+)', event.raw_text):
            item = re.search('#ex_create ([a-zA-Z]{1,20}) (\d+)', event.raw_text).group(1)
            price = int(re.search('#ex_create ([a-zA-Z]{1,20}) (\d+)', event.raw_text).group(2))
            out = '–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∫—É–ø–∫—É {} –ø–æ {} –∑–∞ —à—Ç.'.format(item,price)
            out1 = '/ex_create' + ' ' + item + ' ' + str(price)
            client.send_message(helper_game, out1)
            client.send_message(event.message.to_id, out)
            logging.info(out)
        elif event.raw_text == '#last_msg':
            client.send_message(event.message.to_id, last_msg)
            logging.info(last_msg)
        elif event.raw_text == '#hero':
            client.send_message(event.message.to_id, hero_msg)
            logging.info(hero_msg)
        elif event.raw_text == '#info':
            littleinfo = '''
{}
üèÖ–£—Ä–æ–≤–µ–Ω—å: {}
–°—Ç–∞—Ç—ã: ‚öîÔ∏è{} üõ°{}
üîã–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {}/{}
üí∞–ó–æ–ª–æ—Ç–æ: {}
–°–æ—Å—Ç–æ—è–Ω–∏–µ:  {}
'''.format(name,level,dmg,deff,endurance,endurancemax,gold,status)
            client.send_message(event.message.to_id, littleinfo)
            logging.info(littleinfo)
        elif event.raw_text == '#status':
            getstatus = '''
‚ö°Ô∏è–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω: {12}
üìØ–ê—Ä–µ–Ω–∞: {2}
üå≤–õ–µ—Å: {0}
‚õ∞Ô∏è–î–æ–ª–∏–Ω–∞: {6}
üçÑ–ë–æ–ª–æ—Ç–æ: {7}
üê´–ö–∞—Ä–∞–≤–∞–Ω—ã: {1}
üó°–°—Ç–æ–ø –∫–∞—Ä–∞–≤–∞–Ω–æ–≤: {3}
üåü–õ–≤–ª–∞–ø—ã: {10}
‚öí–ü–µ—Ä–≤–∞—è –ø—Ä–æ—Ñ–∞: {11}
‚öí–í—Ç–æ—Ä–∞—è –ø—Ä–æ—Ñ–∞: {13}
üè≥Ô∏è‚Äçüåà–ü—Ä–∏–∫–∞–∑—ã: {4}
ü§ù–ü–æ–º–æ—â–Ω–∏–∫: {5}
üõ°–ê–≤—Ç–æ–î–µ—Ñ: {8}
üé≤–ö–æ—Å—Ç–∏: {9}
'''.format(les,caravan,arena,rob,order,help,mountval,bog,autodef,dice,lvlup,setprof1title,enable_bot,setprof2title)
            client.send_message(event.message.to_id, getstatus)
            logging.info(getstatus)
        elif event.raw_text == '#les':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if les:
                    i['les'] = False
                    les = False
                    client.send_message(event.message.to_id, '–õ–µ—Å –≤—ã–∫–ª—é—á–µ–Ω')
                else:
                    i['les'] = True
                    les = True
                    client.send_message(event.message.to_id, '–õ–µ—Å –≤–∫–ª—é—á—ë–Ω')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#caravan':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if caravan:
                    i['caravan'] = False
                    caravan = False
                    client.send_message(event.message.to_id, '–ö–∞—Ä–∞–≤–∞–Ω—ã –≤—ã–∫–ª—é—á–µ–Ω—ã')
                else:
                    i['caravan'] = True
                    caravan = True
                    client.send_message(event.message.to_id, '–ö–∞—Ä–∞–≤–∞–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#arena':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if arena:
                    i['arena'] = False
                    arena = False
                    client.send_message(event.message.to_id, '–ê—Ä–µ–Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞')
                else:
                    i['arena'] = True
                    arena = True
                    client.send_message(event.message.to_id, '–ê—Ä–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#rob':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if rob:
                    i['rob'] = False
                    rob = False
                    client.send_message(event.message.to_id, '–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞—Ä–∞–≤–∞–Ω–æ–≤ –≤—ã–∫–ª—é—á–µ–Ω–∞')
                else:
                    i['rob'] = True
                    rob = True
                    client.send_message(event.message.to_id, '–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞—Ä–∞–≤–∞–Ω–æ–≤ –≤–∫–ª—é—á—ë–Ω–∞')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#trade':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if help:
                    i['help'] = False
                    help = False
                    client.send_message(event.message.to_id, '–¢—Ä–µ–π–¥—ã —Å @CWCastleBot –≤—ã–∫–ª—é—á–µ–Ω—ã')
                else:
                    i['help'] = True
                    help = True
                    client.send_message(event.message.to_id, '–¢—Ä–µ–π–¥—ã —Å @CWCastleBot –≤–∫–ª—é—á–µ–Ω—ã')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#mountval':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if mountval:
                    i['mountval'] = False
                    mountval = False
                    client.send_message(event.message.to_id, '–î–æ–ª–∏–Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞')
                else:
                    i['mountval'] = True
                    mountval = True
                    client.send_message(event.message.to_id, '–î–æ–ª–∏–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#bog':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if bog:
                    i['bog'] = False
                    bog = False
                    client.send_message(event.message.to_id, '–ë–æ–ª–æ—Ç–æ –≤—ã–∫–ª—é—á–µ–Ω–æ')
                else:
                    i['bog'] = True
                    bog = True
                    client.send_message(event.message.to_id, '–ë–æ–ª–æ—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#order':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if order:
                    i['order'] = False
                    order = False
                    client.send_message(event.message.to_id, '–ü–∏–Ω—ã –≤—ã–∫–ª—é—á–µ–Ω—ã')
                else:
                    i['order'] = True
                    order = True
                    client.send_message(event.message.to_id, '–ü–∏–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#lvlup':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if lvlup:
                    i['lvlup'] = False
                    lvlup = False
                    client.send_message(event.message.to_id, '–õ–≤–ª–∞–ø –≤—ã–∫–ª—é—á–µ–Ω')
                else:
                    i['lvlup'] = True
                    lvlup = True
                    client.send_message(event.message.to_id, '–õ–≤–ª–∞–ø –≤–∫–ª—é—á–µ–Ω')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#autodef':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if autodef:
                    i['autodef'] = False
                    autodef = False
                    client.send_message(event.message.to_id, '–ê–≤—Ç–æ–î–µ—Ñ –≤—ã–∫–ª—é—á–µ–Ω')
                else:
                    i['autodef'] = True
                    autodef = True
                    client.send_message(event.message.to_id, '–ê–≤—Ç–æ–î–µ—Ñ –≤–∫–ª—é—á–µ–Ω')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#dice':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if dice:
                    i['dice'] = False
                    dice = False
                    client.send_message(event.message.to_id, '–ò–≥—Ä–∞ –≤ –∫–æ—Å—Ç–∏ –≤—ã–∫–ª—é—á–µ–Ω–∞')
                else:
                    i['dice'] = True
                    dice = True
                    client.send_message(event.message.to_id, '–ò–≥—Ä–∞ –≤ –∫–æ—Å—Ç–∏ –≤–∫–ª—é—á–µ–Ω–∞')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif '#lvlprof1' in event.raw_text:
            if 'master' in  event.raw_text:
                setprof1 = 'master'
                setprof1title = '‚öí–ú–∞—Å—Ç–µ—Äüì¶'
                txt = '–ü–µ—Ä–≤–∞—è –ø—Ä–æ—Ñ–∞ –≤—ã–±—Ä–∞–Ω–∞: {}'.format(setprof1title)
            elif 'esquire' in  event.raw_text:
                setprof1 = 'esquire'
                setprof1title = '‚öîÔ∏è–≠—Å–∫–≤–∞–π—Äüõ°' 
                txt = '–ü–µ—Ä–≤–∞—è –ø—Ä–æ—Ñ–∞ –≤—ã–±—Ä–∞–Ω–∞: {}'.format(setprof1title)
            else:
                setprof1 = 'master'
                setprof1title = '‚öí–ú–∞—Å—Ç–µ—Äüì¶'
                txt = '–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å master –∏–ª–∏ esquire `#lvlprof1 master`'
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                i['lvlprof1'] = setprof1
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
            client.send_message(event.message.to_id, txt)
        elif '#lvlprof2' in event.raw_text:
            if 'alchemist' in  event.raw_text:
                setprof2 = 'alchemist'
                setprof2title = '‚öóÔ∏è–ê–ª—Ö–∏–º–∏–∫'
            elif 'harvester' in  event.raw_text:
                setprof2 = 'harvester'
                setprof2title = 'üì¶–î–æ–±—ã—Ç—á–∏–∫' 
            elif 'smith' in  event.raw_text:
                setprof2 = 'smith'
                setprof2title = '‚öí–ö—É–∑–Ω–µ—Ü' 
            elif 'keeper' in  event.raw_text:
                setprof2 = 'keeper'
                setprof2title = 'üõ°–•—Ä–∞–Ω–∏—Ç–µ–ª—å' 
            elif 'ranger' in  event.raw_text:
                setprof2 = 'ranger'
                setprof2title = 'üèπ–†–µ–π–Ω–¥–∂–µ—Ä' 
            elif 'knight' in  event.raw_text:
                setprof2 = 'knight'
                setprof2title = '‚öîÔ∏è–†—ã—Ü–∞—Ä—å' 
            else:
                setprof2 = 'harvester'
                setprof2title = 'üì¶–î–æ–±—ã—Ç—á–∏–∫'
                txt = '–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å alchemist|harvester|smith|keeper|ranger|knight `#lvlprof2 harvester`'
            txt = '–í—Ç–æ—Ä–∞—è –ø—Ä–æ—Ñ–∞ –≤—ã–±—Ä–∞–Ω–∞: {}'.format(setprof2title)
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                i['lvlprof2'] = setprof2
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
            client.send_message(event.message.to_id, txt)
        elif event.raw_text == '#set_bot':
            with open(twos, 'r') as file:
                data = json.loads(file.read())
            for i in data:
                if enable_bot:
                    i['enable_bot'] = False
                    enable_bot = False
                    client.send_message(event.message.to_id, '–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω')
                else:
                    i['enable_bot'] = True
                    enable_bot = True
                    client.send_message(event.message.to_id, '–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω')
            with open(twos, 'w') as file:
                json.dump(data, file, indent=2, ensure_ascii=False)
        elif event.raw_text == '#help':
            out = '''–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–≤–∏–Ω–∫–∞–º–∏:
`#set_bot` - –≤–∫–ª—é—á–∏—Ç—å\–≤—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞
`#info` - –ø–æ–∫–∞–∑–∞—Ç—å –º–∞–ª—ã–π –ø—Ä–æ—Ñ–∏–ª—å
`#hero` - –ø–æ–∫–∞–∑–∞—Ç—å –æ–±—ã—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
`#status` - –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π
`#lvlup` - –í–∫–ª\–í—ã–∫–ª —Ä–∞–Ω–¥–æ–º–Ω–æ–π –ø—Ä–æ–∫–∞—á–∫–∏ –ª–≤–ª–∞
`#les` - –í–∫–ª\–í—ã–∫–ª –ª–µ—Å–∞
`#mountval` - –í–∫–ª\–í—ã–∫–ª –¥–æ–ª–∏–Ω—ã
`#bog` - –í–∫–ª\–í—ã–∫–ª –±–æ–ª–æ—Ç–∞
`#caravan` - –í–∫–ª\–í—ã–∫–ª –∫–∞—Ä–∞–≤–∞–Ω–æ–≤
`#arena` - –í–∫–ª\–í—ã–∫–ª –∞—Ä–µ–Ω—ã
`#rob` - –í–∫–ª\–í—ã–∫–ª –Ω–∞–∂–∞—Ç–∏—è **/go**
`#trade` - –í–∫–ª\–í—ã–∫–ª —Ç—Ä–µ–π–¥–æ–≤ —Å **@CWCastleBot**
`#order` - –í–∫–ª\–í—ã–∫–ª –ø–∏–Ω–æ–≤
`#autodef` - –í–∫–ª\–í—ã–∫–ª –ê–≤—Ç–æ–î–µ—Ñ
`#ex_create item price` - –ø–æ–∫—É–ø–∞—Ç—å –∏–∑ **@CWCastleBot** item –ø–æ —Ü–µ–Ω–µ price
`#dice` - –í–∫–ª\–í—ã–∫–ª –∏–≥—Ä—É –≤ –∫–æ—Å—Ç–∏
`#last_msg` - –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–≤
`#lvlprof1 master/esquire` - –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–≤—É—é –ø—Ä–æ—Ñ—É
`#lvlprof2 alchemist|harvester|smith|keeper|ranger|knight` - –≤—ã–±—Ä–∞—Ç—å –≤—Ç–æ—Ä—É—é –ø—Ä–æ—Ñ—É
'''
            client.send_message(event.message.to_id, out)
    elif event.message.from_id == 777000:
        logging.info('–ü–æ–ª—É—á–∏–ª–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        if 'Your login code' in event.raw_text:
            code = int(re.search('Your login code: (\d+)', event.raw_text).group(1))
            logging.info('Login code: '+str(code))
            code -= 1
            if main_chat == 0:
                client.send_message(admin_user, '–õ–æ–≥–∏–Ω –∫–æ–¥: {0}\n–ß—Ç–æ–±—ã –æ–Ω –ø–æ–¥–æ—à—ë–ª - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: {0} + 1 –∏ –≤–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç–≥'.format(code))
            else:
                client.send_message(main_chat, '–õ–æ–≥–∏–Ω –∫–æ–¥: {0}\n–ß—Ç–æ–±—ã –æ–Ω –ø–æ–¥–æ—à—ë–ª - –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: {0} + 1 –∏ –≤–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç–≥'.format(code))
if __name__ == '__main__':
    _thread.start_new_thread(worker, ())
    client.idle()
